import logging
import asyncio
import google.generativeai as genai
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.filters import Command
import re

# üîê –í–∞—à–∏ –∫–ª—é—á–∏
BOT_TOKEN = "7820665212:AAE0E7QmLEc7VkNboc-h27YDMiWqWXl_kes"
GOOGLE_API_KEY = "AIzaSyA8AQxfsbH0Un8ejnShzfQ0FnaQfDXlJMI"
ADMIN_ID = 7324661214
CHANNEL_ID = "@NoTrustNet"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Gemini API
genai.configure(api_key=GOOGLE_API_KEY)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

MAX_CAPTION_LENGTH = 1024  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–æ–¥–ø–∏—Å–∏


# –ü—Ä–æ–º—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é Google Gemini
def generate_prompt(text: str) -> str:
    return f"""
    –¢—ã ‚Äî AI-—Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å –≤ –ª–∞–∫–æ–Ω–∏—á–Ω–æ–º –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–º —Å—Ç–∏–ª–µ, –∫–∞–∫ –≤ –∫–∞–Ω–∞–ª–µ @naebnet.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:

    –ù–æ–≤–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫—Ä–∞—Ç–∫–æ–π.

    –î–æ–±–∞–≤—å –≤—ã–¥–µ–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.

    –°–æ—Ö—Ä–∞–Ω–∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –∏ —Å–ª–µ–≥–∫–∞ –∏—Ä–æ–Ω–∏—á–Ω—ã–π —Ç–æ–Ω, —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º.

    –ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è, –æ–±—ä—è—Å–Ω–∏ –µ—ë –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.

    –£–±–µ—Ä–∏ –ª–∏—à–Ω—é—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≤–æ–¥—É, –æ—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Å—É—Ç—å.

    –ü–µ—Ä–µ–ø–∏—à–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–∏–≤–ª–µ–∫–∞–ª –≤–Ω–∏–º–∞–Ω–∏–µ, –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω—É–∂–Ω–æ –≤—ã–¥–µ–ª—è—Ç—å –±–æ–ª–¥–æ–º –∏ –µ–Ω—Ç–µ—Ä–æ–º –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞.

–ü—Ä–∏–º–µ—Ä –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
¬´–ß–µ—Ä–Ω—ã–π —á–µ—Ç–≤–µ—Ä–≥ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤: —Ä—ã–Ω–∫–∏ —Ä—É—à–∞—Ç—Å—è, –°–®–ê –≤–≤–æ–¥—è—Ç –Ω–æ–≤—ã–µ –ø–æ—à–ª–∏–Ω—ã, –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞ –ø–∞–¥–∞–µ—Ç –Ω–∞ $1,7 —Ç—Ä–ª–Ω. Apple –ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç —Ö—É–¥—à–∏–π –¥–µ–Ω—å –∑–∞ 5 –ª–µ—Ç: –∞–∫—Ü–∏–∏ -8%, –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è -$300 –º–ª—Ä–¥. –ë–∏–≥—Ç–µ—Ö –≤ –º–∏–Ω—É—Å–µ: Nvidia -5%, Qualcomm -7%, Amazon -9%. –ü–æ–¥ —É–¥–∞—Ä–æ–º –∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫: –∏–Ω–¥–µ–∫—Å –ú–æ—Å–±–∏—Ä–∂–∏ –Ω–∏–∂–µ 2900, —Å–∏–ª—å–Ω–µ–µ –≤—Å–µ–≥–æ —Å—Ç—Ä–∞–¥–∞—é—Ç –ì–∞–∑–ø—Ä–æ–º, –†–æ—Å–Ω–µ—Ñ—Ç—å –∏ –°—É—Ä–≥—É—Ç–Ω–µ—Ñ—Ç–µ–≥–∞–∑.¬ª

–ü—Ä–∏–º–µ—Ä –∂–µ–ª–∞–µ–º–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
¬´–ß–µ—Ä–Ω—ã–π —á–µ—Ç–≤–µ—Ä–≥ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤: —Ñ–æ–Ω–¥–æ–≤—ã–µ —Ä—ã–Ω–∫–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É –ø–∞–¥–∞—é—Ç –Ω–∞ —Ñ–æ–Ω–µ –Ω–æ–≤—ã—Ö –ø–æ—à–ª–∏–Ω –°–®–ê. –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞ –æ–±–≤–∞–ª–∏–ª–∞—Å—å (https://www.bloomberg.com/news/articles/2025-04-03/trump-tariffs-set-to-zap-nearly-2-trillion-from-us-stock-market) –Ω–∞ $1,7 —Ç—Ä–ª–Ω —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–æ—Ä–≥–æ–≤.

–£ Apple —Å–µ–≥–æ–¥–Ω—è —Ö—É–¥—à–∏–π –¥–µ–Ω—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç. –ê–∫—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –º–∏–Ω—É—Å–µ –Ω–∞ 8%, –∞ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è ‚Äî –Ω–∞ $300 –º–ª—Ä–¥. –ü–∞–¥–∞–µ—Ç –≤–µ—Å—å –±–∏–≥—Ç–µ—Ö: Nvidia (-5%), Qualcomm (-7%), Amazon (-9%).

–ó–∞—Ç—Ä–æ–Ω—É–ª–æ –∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫. –ò–Ω–¥–µ–∫—Å –ú–æ—Å–±–∏—Ä–∂–∏ —É–ø–∞–ª –Ω–∏–∂–µ 2900 –ø—É–Ω–∫—Ç–æ–≤. –°–∏–ª—å–Ω–µ–µ –≤—Å–µ–≥–æ –ø–æ—Å—Ç—Ä–∞–¥–∞–ª–∏ –ì–∞–∑–ø—Ä–æ–º, –†–æ—Å–Ω–µ—Ñ—Ç—å –∏ –°—É—Ä–≥—É—Ç–Ω–µ—Ñ—Ç–µ–≥–∞–∑.¬ª

–¢–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–æ—Ç–∞–π —Å–ª–µ–¥—É—é—â—É—é –Ω–æ–≤–æ—Å—Ç—å:
{text}
    """


async def improve_text_with_gemini(text: str) -> str:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é Google Gemini –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –µ–≥–æ."""
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ–º—Ç–∞
        prompt = generate_prompt(text)

        model = genai.GenerativeModel("models/gemini-1.5-pro-latest")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é –º–æ–¥–µ–ª—å
        response = model.generate_content([prompt])  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        improved_text = response.text.strip() if hasattr(response, 'text') else text

        # –£–±–∏—Ä–∞–µ–º —Å—Å—ã–ª–∫–∏
        improved_text = re.sub(r'http\S+', '', improved_text)  # –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫–∏

        return improved_text
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Google Gemini: {e}")
        return text  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏


@dp.message(Command("start"))
async def cmd_start(message: Message):
    """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    if message.from_user.id == ADMIN_ID:
        await message.answer("‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ü–µ—Ä–µ—à–ª–∏ –ø–æ—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
    else:
        await message.answer("‚õî –≠—Ç–æ—Ç –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")


@dp.message(F.forward_from_chat | F.text | F.photo | F.video)
async def handle_post(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–π –ø–æ—Å—Ç (—Å –º–µ–¥–∏–∞ –∏–ª–∏ –±–µ–∑)"""
    if message.from_user.id != ADMIN_ID:
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞
    original_text = message.caption or message.text or "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞"
    improved_text = await improve_text_with_gemini(original_text)

    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –æ–±—Ä–µ–∑–∞–µ–º –¥–æ 1024 —Å–∏–º–≤–æ–ª–æ–≤
    if len(improved_text) > MAX_CAPTION_LENGTH:
        improved_text = improved_text[:MAX_CAPTION_LENGTH - 3] + "..."  # –î–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    buttons = [
        [InlineKeyboardButton(text="‚úÖ –ü–µ—Ä–µ—Å–ª–∞—Ç—å", callback_data="send_post")],
        [InlineKeyboardButton(text="‚ùå –ù–µ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å", callback_data="cancel_post")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

    # –ï—Å–ª–∏ –≤ –ø–æ—Å—Ç–µ –µ—Å—Ç—å –º–µ–¥–∏–∞
    if message.photo:
        await message.answer_photo(photo=message.photo[-1].file_id,
                                   caption=improved_text, reply_markup=keyboard)
    elif message.video:
        await message.answer_video(video=message.video.file_id, caption=improved_text,
                                   reply_markup=keyboard)
    else:
        await message.answer(improved_text, reply_markup=keyboard)


@dp.callback_query(F.data == "send_post")
async def send_post(callback: types.CallbackQuery):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª"""
    if callback.from_user.id != ADMIN_ID:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–µ –ø—É—Å—Ç–æ–π
    text_to_send = callback.message.text
    if text_to_send is None or not text_to_send.strip():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ None
        await callback.message.edit_text("‚ùå –¢–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π. –ü–æ—Å—Ç –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        await callback.answer()
        return

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ç–µ–∫—Å—Ç –≤ –∫–∞–Ω–∞–ª
    await bot.send_message(chat_id=CHANNEL_ID, text=text_to_send)
    await callback.message.edit_text("‚úÖ –ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª!")
    await callback.answer()


@dp.callback_query(F.data == "cancel_post")
async def cancel_post(callback: types.CallbackQuery):
    """–û—Ç–º–µ–Ω—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ—Å—Ç–∞"""
    if callback.from_user.id != ADMIN_ID:
        return

    await callback.message.edit_text("‚ùå –ü–æ—Å—Ç –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    await callback.answer()


async def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
